function Element(t,e,n){this.id=t,this.chromosome=e,this.fitness=n,this.probability=0,this.getId=function(){return this.id},this.getChromosome=function(){return this.chromosome.slice()},this.getFitness=function(){return this.fitness},this.getProbability=function(){return this.probability},this.setId=function(t){this.id=t},this.setChromosome=function(t){this.chromosome=t.slice()},this.setFitness=function(t){this.fitness=t},this.setProbability=function(t){this.probability=t},this.setGen=function(t,e){this.chromosome[t]=e.slice()},this.getGen=function(t){return this.chromosome[t].slice()},this.write=function(){var t="";t+="Id: "+this.id,t+="	Chromosome: ";for(var e=0;e<this.chromosome.length;e++)t+=this.chromosome[e]+" ";return t+="	Fitness: "+this.fitness,t+="	Probability: "+Math.round(100*this.probability)/100}}function Functions(){function t(t){var e=new Element(t.getId(),t.getChromosome(),t.getFitness());return e.setProbability(t.getProbability()),e}function e(e){for(var n=[],i=0;i<e.length;i++)n[i]=t(e[i]);return n}that=this,this.initialization=function(t,e,n,i){var o=[],s=[];if(i)for(var r=0;t>r;r++){for(var a=0;e>a;a++)s[a]=n[Math.floor(Math.random()*n.length)];o[r]=new Element(r,s.slice(),0)}else if(n.length>=e)for(var r=0;t>r;r++){auxGenes=n.slice();for(var a=0;e>a;a++){var h=Math.floor(Math.random()*auxGenes.length);s[a]=auxGenes[h],auxGenes.splice(h,1)}o[r]=new Element(r,s.slice(),0)}else console.log("No hay suficientes genes diferentes para que no se repeitan en un cromosoma, dado el tama√±o del cromosoma");return o},this.isValid=function(){return!0},this.fitnessFunction=function(t){for(var e=0,n=0;n<t.getChromosome().length;n++)0==t.getChromosome()[n].localeCompare("1")&&e++;return e},this.evaluate=function(t){var n=[];n=e(t);for(var i=0;i<n.length;i++)n[i].setFitness(this.fitnessFunction(n[i]));return n},this.rouletteWheelSelection=function(t){var n=[],i=[];n=e(t),sumFitness=0;for(var o=0;o<n.length;o++)sumFitness+=n[o].getFitness();for(var o=0;o<n.length;o++)n[o].setProbability(n[o].getFitness()/sumFitness);n.sort(function(t,e){return t.getProbability()-e.getProbability()});for(var o=1;o<n.length;o++)n[o].setProbability(n[o].getProbability()+n[o-1].getProbability());for(var o=0;o<n.length;o++)for(var s=Math.random(),r=0;r<n.length;r++)if(s<=n[r].getProbability()){i[o]=new Element(n[r].getId(),n[r].getChromosome(),n[r].getFitness());break}return i},this.crossover=function(n,i,o){function s(t,e){for(var n=[],i=0;i<t.getChromosome().length/2;)n[i]=t.getChromosome()[i],i++;for(;i<e.getChromosome().length;)n[i]=e.getChromosome()[i],i++;return n}var r=[],a=e(i),h=Math.floor(n.length*(100-o)/100);a.sort(function(t,e){return e.getFitness()-t.getFitness()});for(var l=0;h>l;l++)r[l]=t(a[l]);for(var l=h;l<n.length-1;l++)r[l]=new Element(l,s(n[l],n[l+1]),0);return r[l]=new Element(l,s(n[n.length-1],n[0]),0),r},this.mutation=function(t,n,i){var o=[];o=e(t);for(var s=0;s<o.length;s++)if(Math.random()<n/100){var r=Math.round(Math.random()*(o[s].getChromosome().length-1));do var a=i[Math.round(Math.random()*(i.length-1))];while(0==a.localeCompare(o[s].getChromosome()[r]));o[s].setGen(r,a)}return o},this.evolution=function(t){var n=[];return n=e(t)},this.printPopulation=function(t){for(var e="",n=0;n<t.length;n++)e+=t[n].write()+"\n";console.log(e)}}function GeneticAlgorithm(t){that=this,this.population=[],this.parents=[],this.children=[],this.best=Object,this.generation=0,this.initialization=t.initialization,this.isValid=t.isValid,this.fitnessFunction=t.fitnessFunction,this.evaluate=t.evaluation,this.selection=t.selection,this.crossover=t.crossover,this.mutation=t.mutation,this.evolution=t.evolution,this.initialize=function(){that.setPopulation(that.initialization(t.popSize,t.chromosomeSize,t.genes,t.repeated))},this.simulateGeneration=function(){0==that.getPopulation().length?console.log("No existen elementos en la poblacion, debe inicializarse primero"):(that.setPopulation(that.evaluate(that.getPopulation())),that.setParents(that.selection(that.getPopulation())),that.setChildren(that.crossover(that.getParents(),that.getPopulation(),t.percentCrossOver)),that.setPopulation(that.getChildren()),that.setPopulation(that.mutation(that.getPopulation(),t.percentMutation,t.genes)),that.setPopulation(that.evolution(that.getPopulation())),that.setPopulation(that.evaluate(that.getPopulation())),that.setGeneration(that.getGeneration()+1),that.setBest(that.bestElement(that.getPopulation())))},this.simulateConditionalGeneration=function(t){for(;that.getGeneration()<t;)that.simulateGeneration();return that.getBest()},this.simulateConditionalTime=function(t){for(var e=(new Date).getTime(),n=(new Date).getTime(),i=0;t>i;)that.simulateGeneration(),n=(new Date).getTime(),i=n-e;return that.getBest()},this.simulateConditionalFitness=function(t){for(that.simulateGeneration();that.getBest().getFitness()<t;)that.simulateGeneration();return that.getBest()},this.printPopulation=function(t){for(var e="",n=0;n<t.length;n++)e+=t[n].write()+"\n";return e},this.bestElement=function(t){function e(t){for(var e=Object,n=!1,i=0;i<t.length;i++){if(that.isValid(t[i])){n=!0,e=that.cloneElement(t[i]);break}n||console.log("No existe ningun elemento valido en esta generacion")}return e}var n=Object,i=[];i=this.clonePopulation(t),i=this.evaluate(i),n=this.cloneElement(e(i));for(var o=0;o<i.length;o++)this.isValid(i[o])&&i[o].getFitness()>n.getFitness()&&(n=this.cloneElement(i[o]));return n},this.cloneElement=function(t){var e=new Element(t.getId(),t.getChromosome(),t.getFitness());return e.setProbability(t.getProbability()),e},this.clonePopulation=function(t){for(var e=[],n=0;n<t.length;n++)e[n]=this.cloneElement(t[n]);return e},this.fitnessMean=function(t){for(var e=0,n=0;n<t.length;n++)e+=t[n].getFitness();return e/=t.length},this.getPopulation=function(){var t=this.clonePopulation(this.population);return t},this.getParents=function(){var t=this.clonePopulation(this.parents);return t},this.getChildren=function(){var t=this.clonePopulation(this.children);return t},this.getBest=function(){var t=this.cloneElement(this.best);return t},this.getGeneration=function(){return this.generation},this.setPopulation=function(t){var e=this.clonePopulation(t);this.population=e},this.setParents=function(t){var e=this.clonePopulation(t);this.parents=e},this.setChildren=function(t){var e=this.clonePopulation(t);this.children=e},this.setBest=function(t){var e=this.cloneElement(t);this.best=e},this.setGeneration=function(t){this.generation=t}}